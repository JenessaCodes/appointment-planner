{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","value","selected","map","contact","index","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","placeholder","required","e","target","min","Date","toLocaleDateString","split","month","day","year","padStart","name","Tile","tile","className","Object","values","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","props","duplicate","setDuplicate","useEffect","find","addContact","App","setContacts","setAppointments","ROUTES","to","activeClassName","exact","path","newContact","prev","newAppointment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.462d8832.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, onChange }) => {\r\n  return (\r\n    <select onChange={onChange}>\r\n      <option key={-1} value={\"\"} selected=\"selected\">\r\n        No Contact Selected\r\n      </option>\r\n      {contacts.map((contact, index) => {\r\n        return (\r\n          <option key={index} value={contact}>\r\n            {contact}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit,\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const getContactNames = () => {\r\n    return contacts.map((contact) => contact.name);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={title}\r\n        placeholder=\"Title\"\r\n        required\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        min={getTodayString}\r\n        required\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"time\"\r\n        value={time}\r\n        required\r\n        onChange={(e) => setTime(e.target.value)}\r\n      />\r\n      <ContactPicker\r\n        contacts={getContactNames()}\r\n        onChange={(e) => setContact(e.target.value)}\r\n      />\r\n      <input type=\"submit\" value=\"Submit Appointment\" />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({ tile }) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {Object.values(tile).map((value, index) => (\r\n        <p key={index} className={index === 0 ? \"tile-title\" : \"tile\"}>\r\n          {value}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ tiles }) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => (\r\n        <Tile tile={tile} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({\r\n  appointments,\r\n  contacts,\r\n  addAppointment,\r\n}) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n    addAppointment(title, contact, date, time);\r\n    setTitle(\"\");\r\n    setContact(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          title={title}\r\n          contact={contact}\r\n          date={date}\r\n          time={time}\r\n          setTitle={setTitle}\r\n          setContact={setContact}\r\n          setDate={setDate}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n          contacts={contacts}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={name}\r\n        name=\"name\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        required\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        type=\"tel\"\r\n        value={phone}\r\n        pattern=\"[1-9][0-9]{2}-[1-9][0-9]{2}-[0-9]{4}\"\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        required\r\n        placeholder=\"Phone Number (###-###-####)\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n        placeholder=\"Email\"\r\n      />\r\n      <input type=\"submit\" value=\"Submit Contact\" />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    if (!duplicate) {\r\n      props.addContact(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n  useEffect(() => {\r\n    if (props.contacts.find((contact) => contact.name === name)) {\r\n      setDuplicate(true);\r\n    }\r\n  }, [name, props.contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate ? \"Name Already Exists\" : \"\"}\r\n        </h2>\r\n        <ContactForm\r\n          name={name}\r\n          phone={phone}\r\n          email={email}\r\n          setName={setName}\r\n          setPhone={setPhone}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={props.contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContact = (name, phone, email) => {\r\n    const newContact = {\r\n      name: name,\r\n      phone: phone,\r\n      email: email,\r\n    };\r\n\r\n    setContacts((prev) => [...prev, newContact]);\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    const newAppointment = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time,\r\n    };\r\n    setAppointments((prev) => [...prev, newAppointment]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            {/* Add props to ContactsPage */}\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            {/* Add props to AppointmentsPage */}\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n              contacts={contacts}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}